import { defineStore } from "pinia";
import { ref } from "vue";
import AMapLoader from "@amap/amap-jsapi-loader";
import type {
  LocationData,
  WeatherData,
  FutureWeatherData,
  Address,
} from "@/libs/api/address/type";
// import { getWeatherIcon } from '@/types/weatherIcon'

function initWeatherStore() {
  return {
    // 定位结果
    result: ``,
    // 城市编码
    citycode: 500231,
    // 状态
    status: ``,
    // 经纬度
    lnglat: [116.397477, 39.908692],
    // 地址
    address: ``,
    // 天气图标
    weatherIcon: `<svg t="1740422247187" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="967" width="30" height="30"><path d="M772.007276 512.323995c0 76.269776-32.933707 143.871932-83.202653 190.673424H336.928089c-52.001658-46.801493-83.202653-114.403648-83.202654-190.673424 0-143.871932 116.13636-260.008292 260.008292-260.008292s258.273549 116.138391 258.273549 260.008292" fill="#FFE079" p-id="968"></path><path d="M841.344175 1023.67499H494.665775c-5.200166 0-8.66762-3.467454-8.66762-8.667621 0-5.200166 3.467454-8.66762 8.66762-8.66762h346.6784c5.200166 0 8.66762 3.467454 8.66762 8.66762-0.002031 5.200166-3.467454 8.66762-8.66762 8.667621z m-416.013267 0h-312.00995c-5.200166 0-8.66762-3.467454-8.667621-8.667621 0-5.200166 3.467454-8.66762 8.667621-8.66762h312.00995c5.200166 0 8.66762 3.467454 8.66762 8.66762-0.002031 5.200166-3.467454 8.66762-8.66762 8.667621z m346.676368-104.003317H390.662459c-5.200166 0-8.66762-3.467454-8.667621-8.66762 0-5.200166 3.467454-8.66762 8.667621-8.66762h381.344817c5.200166 0 8.66762 3.467454 8.66762 8.66762 0 5.200166-3.467454 8.66762-8.66762 8.66762z m-450.679685 0H182.655825c-5.200166 0-8.66762-3.467454-8.66762-8.66762 0-5.200166 3.467454-8.66762 8.66762-8.66762h138.671766c5.200166 0 8.66762 3.467454 8.66762 8.66762-0.002031 5.200166-3.467454 8.66762-8.66762 8.66762z m624.019901-104.003317H564.000643c-5.200166 0-8.66762-3.467454-8.66762-8.66762s3.467454-8.66762 8.66762-8.66762h381.344817c5.200166 0 8.66762 3.467454 8.667621 8.66762s-3.465423 8.66762-8.665589 8.66762z m-450.681717 0H113.320958c-5.200166 0-8.66762-3.467454-8.667621-8.66762s3.467454-8.66762 8.667621-8.66762H494.665775c5.200166 0 8.66762 3.467454 8.66762 8.66762s-3.467454 8.66762-8.66762 8.66762z m520.016584-104.003317h-728.023217c-5.200166 0-8.66762-3.467454-8.66762-8.66762s3.467454-8.66762 8.66762-8.66762h728.023217c5.200166 0 8.66762 3.467454 8.66762 8.66762s-3.467454 8.66762-8.66762 8.66762z m-797.358085 0H9.317641c-5.200166 0-8.66762-3.467454-8.66762-8.66762s3.467454-8.66762 8.66762-8.66762h208.006633c5.200166 0 8.66762 3.467454 8.667621 8.66762s-3.467454 8.66762-8.667621 8.66762z m65.867413-67.602156c-3.467454 0-6.932877-1.732712-6.932877-5.200165-20.800663-38.133872-31.200995-83.202653-31.200995-126.536692 0-147.337355 121.336526-268.675912 268.675912-268.675912s268.675912 121.336526 268.675912 268.675912c0 43.334038-10.400332 86.670108-31.200995 124.80398-1.732712 3.467454-6.932877 5.200166-12.133043 3.467454-3.467454-1.732712-5.200166-6.932877-3.467454-12.133043 19.067952-36.401161 29.468284-76.269776 29.468283-117.871102 0-138.671766-112.670937-251.340672-251.340672-251.340672s-251.340672 112.670937-251.340671 251.340672c0 41.601327 10.400332 81.469942 29.468283 117.871102 1.732712 3.467454 0 8.66762-3.467454 12.133043-3.469486 1.73068-5.204228 3.465423-5.204229 3.465423z m696.822223-123.071268h-138.671766c-5.200166 0-8.66762-3.467454-8.667621-8.66762s3.467454-8.66762 8.667621-8.66762h138.671766c5.200166 0 8.66762 3.467454 8.66762 8.66762s-3.467454 8.66762-8.66762 8.66762z m-797.358085 0H43.984059c-5.200166 0-8.66762-3.467454-8.66762-8.66762s3.467454-8.66762 8.66762-8.66762H182.655825c5.200166 0 8.66762 3.467454 8.66762 8.66762s-3.467454 8.66762-8.66762 8.66762z m499.21592-86.670108c-3.467454 0-6.932877-1.732712-6.932877-5.200166-13.867786-27.733541-36.401161-52.001658-62.40199-71.06961-3.467454-3.467454-5.200166-8.66762-1.732711-12.133043 3.467454-3.467454 8.66762-5.200166 12.133043-1.732712 29.468284 19.067952 53.73437 45.068781 69.334867 76.269776 1.732712 3.467454 0 8.66762-3.467454 12.133044-3.465423 1.732712-5.200166 1.732712-6.932878 1.732711z m135.204312-39.866584c-3.467454 0-6.932877-1.732712-8.66762-5.200166-1.732712-5.200166 0-8.66762 5.200166-12.133043l64.134701-26.000829c5.200166-1.732712 8.66762 0 12.133044 5.200166 1.732712 5.200166 0 8.66762-5.200166 12.133043l-64.134702 26.000829h-3.465423z m-610.152114 0h-3.467455l-64.134701-26.000829c-5.200166-1.732712-6.932877-6.932877-5.200166-12.133043 1.732712-5.200166 6.932877-6.932877 12.133043-5.200166l64.134702 26.000829c5.200166 1.732712 6.932877 6.932877 5.200166 12.133043-1.732712 3.465423-5.200166 5.200166-8.665589 5.200166z m736.688806-52.001658c-3.467454 0-6.932877-1.732712-8.66762-5.200166-1.732712-5.200166 0-8.66762 5.200166-12.133043l71.06961-29.468284c5.200166-1.732712 8.66762 0 12.133043 5.200166 1.732712 5.200166 0 8.66762-5.200166 12.133043l-71.06961 29.468284h-3.465423z m-863.227529 0h-3.467455L5.850187 312.984981c-5.200166-1.732712-6.932877-6.932877-5.200166-12.133043 1.732712-5.200166 6.932877-6.932877 12.133043-5.200166l71.06961 29.468284c5.200166 1.732712 6.932877 6.932877 5.200166 12.133043-3.467454 3.465423-5.200166 5.200166-8.66762 5.200166z m670.821393-52.001658c-1.732712 0-5.200166 0-6.932877-1.732712-3.467454-3.467454-3.467454-8.66762 0-12.133043l86.670107-84.935365c3.467454-3.467454 8.66762-3.467454 12.133043 0 3.467454 3.467454 3.467454 8.66762 0 12.133043l-86.670107 84.935365c-1.732712 1.732712-3.465423 1.732712-5.200166 1.732712z m-466.280183 0c-1.732712 0-5.200166 0-6.932877-1.732712l-98.803151-98.803151c-3.467454-3.467454-3.467454-8.66762 0-12.133043s8.66762-3.467454 12.133043 0l98.803151 98.803151c3.467454 3.467454 3.467454 8.66762 0 12.133043 0 1.732712-3.467454 1.732712-5.200166 1.732712z m353.611277-74.537065h-3.467454c-5.200166-1.732712-6.932877-6.932877-5.200166-12.133043l26.000829-64.134702c1.732712-5.200166 6.932877-6.932877 12.133043-5.200166s6.932877 6.932877 5.200166 12.133044l-26.000829 64.134701c-1.732712 3.467454-5.200166 5.200166-8.665589 5.200166z m-253.075414 0c-3.467454 0-6.932877-1.732712-8.66762-5.200166l-26.00083-64.134701c-1.732712-5.200166 0-8.66762 5.200166-12.133044 5.200166-1.732712 8.66762 0 12.133043 5.200166l26.00083 64.134702c1.732712 5.200166 0 8.66762-5.200166 12.133043h-3.465423z m126.536691-24.266086c-5.200166 0-8.66762-3.467454-8.66762-8.667621V61.64431c0-5.200166 3.467454-8.66762 8.66762-8.667621s8.66762 3.467454 8.667621 8.667621V182.980835c0 5.200166-3.467454 8.66762-8.667621 8.667621zM333.460634 89.37785c-3.467454 0-6.932877-1.732712-8.66762-5.200166L295.326762 13.108074c-1.732712-5.200166 0-8.66762 5.200166-12.133043 5.200166-1.732712 8.66762 0 12.133043 5.200166l29.468284 71.06961c1.732712 5.200166 0 8.66762-5.200166 12.133043-1.734743-1.732712-3.467454 0-3.467455 0z m357.078732 0h-3.467455c-5.200166-1.732712-6.932877-6.932877-5.200166-12.133043L711.340029 6.175197C713.072741 0.975031 718.272906-0.75768 723.473072 0.975031s6.932877 6.932877 5.200166 12.133043L699.204955 84.177684c-1.732712 1.732712-5.200166 5.200166-8.665589 5.200166z" fill="#51565F" p-id="969"></path></svg>`,
    //未来四天的天气
    forecast: [] as FutureWeatherData[],
    // 天气信息
    dayWeather: {
      province: "",
      city: "",
      adcode: "",
      weather: "正在获取中……",
      temperature: 0,
      windDirection: "",
      windPower: "",
      humidity: "",
      reportTime: "",
      info: "",
    } as WeatherData,
    // 地址信息
    addressResult: {
      status: 0,
      code: 0,
      info: "SUCCESS",
      position: {
        KL: 0,
        className: "AMap.*",
        kT: 0,
        lat: 0,
        lng: 0,
      },
      location_type: "",
      message: "",
      accuracy: 131,
      isConverted: false,
      altitude: null,
      altitudeAccuracy: null,
      heading: null,
      speed: null,
    } as LocationData,
  };
}
//天气
export const useWeatherStore = defineStore("weather", () => {
  const weatherStore = ref(initWeatherStore());

  // 获取天气信息
  function getWeather() {
    AMapLoader.load({
      key: "3d349cedfb25241944fe21e4c6928367", // 申请好的Web端开发者Key，首次调用 load 时必填
      version: "2.0", // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15
      plugins: ["AMap.Scale,AMap.Geocoder,AMap.Weather"], //需要使用的的插件列表，如比例尺'AMap.Scale'，支持添加多个如：['...','...']
    })
      .then((AMap) => {
        var geocoder = new AMap.Geocoder({
          radius: 1000, //范围，默认：500
        });
        var marker = new AMap.Marker();
        AMap.plugin("AMap.Geolocation", function () {
          var geolocation = new AMap.Geolocation({
            enableHighAccuracy: true, //是否使用高精度定位，默认:true
            timeout: 10000, //超过10秒后停止定位，默认：5s
          });
          geolocation.getCurrentPosition(function (
            status: string,
            result: any
          ) {
            if (status == "complete") {
              onComplete(result);
            } else {
              onError(result);
            }
          });
        });
        //解析定位结果
        function onComplete(data: LocationData) {
          weatherStore.value.status = "定位成功";
          Object.assign(weatherStore.value.addressResult, data);
          weatherStore.value.lnglat = [data.position.lng, data.position.lat];
          weatherStore.value.result = "获取成功:" + data.message;
          regeoCode();
        }
        //解析定位错误信息
        function onError(data: any) {
          weatherStore.value.status = "定位失败";
          weatherStore.value.result =
            "失败原因排查信息:" +
            data.message +
            "浏览器返回信息：" +
            data.originMessage;
          weatherStore.value.dayWeather.weather = "获取失败";
          console.log("获取失败", data);
        }
        // 转地址
        function regeoCode() {
          marker.setPosition(weatherStore.value.lnglat);
          geocoder.getAddress(
            weatherStore.value.lnglat,
            function (status: string, result: Address) {
              if (status === "complete" && result.regeocode) {
                console.log("获取成功", result);
                weatherStore.value.address = result.regeocode.formattedAddress;
                weatherStore.value.citycode =
                  result.regeocode.addressComponent.adcode;
                getWeather();
              } else {
                console.error("根据经纬度查询地址失败");
              }
            }
          );
        }
        //获取天气
        function getWeather() {
          AMap.plugin("AMap.Weather", function () {
            var weather = new AMap.Weather();
            //查询实时天气信息, 查询的城市到行政级别的城市，如朝阳区、杭州市
            weather.getLive(
              weatherStore.value.citycode,
              function (err: any, data: WeatherData) {
                if (!err) {
                  console.log("获取天气", data);
                  Object.assign(weatherStore.value.dayWeather, data);
                  //   weatherStore.value.weatherIcon = getWeatherIcon(data.weather);
                  weatherStore.value.weatherIcon = `<svg t="1740409108636" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1636" width="20" height="20"><path d="M512 256c-141.162667 0-256 114.837333-256 256 0 141.141333 114.837333 256 256 256 141.141333 0 256-114.858667 256-256 0-141.162667-114.858667-256-256-256zM512 192a32 32 0 0 1-32-32V64a32 32 0 1 1 64 0v96A32 32 0 0 1 512 192zM263.104 295.104c-8.490667 0-16.64-3.370667-22.613333-9.386667L172.586667 217.856a32 32 0 1 1 45.248-45.248l67.861333 67.861333a31.957333 31.957333 0 0 1-22.613333 54.634667zM160 544H64a32 32 0 1 1 0-64h96a32 32 0 1 1 0 64zM195.242667 860.757333a31.957333 31.957333 0 0 1-22.634667-54.613333l67.882667-67.904a32 32 0 0 1 45.226666 45.248l-67.861333 67.904c-5.973333 6.016-14.144 9.386667-22.613333 9.386667zM512 992a32 32 0 0 1-32-32v-96a32 32 0 1 1 64 0V960a32 32 0 0 1-32 32zM828.778667 860.778667c-8.490667 0-16.64-3.370667-22.634667-9.386667l-67.904-67.904a32 32 0 1 1 45.248-45.248l67.904 67.904a31.957333 31.957333 0 0 1-22.613333 54.613333zM960 544h-96.042667a32 32 0 1 1 0-64H960a32 32 0 1 1 0 64zM760.853333 295.104a31.978667 31.978667 0 0 1-22.613333-54.613333l67.904-67.925334a32 32 0 1 1 45.248 45.248l-67.904 67.904a31.786667 31.786667 0 0 1-22.613333 9.386667z" fill="#FAD105" p-id="1637"></path></svg>`;
                }
              }
            );
            //未来4天天气预报
            weather.getForecast(
              weatherStore.value.citycode,
              function (err: any, data: any) {
                if (err) {
                  return;
                }
                weatherStore.value.forecast = [];
                console.log(data);
                Object.assign(weatherStore.value.forecast, data.forecasts);
              }
            );
          });
        }
      })
      .catch((e) => {
        console.log(e);
      });
  }

  //打印信息
  function Log() {
    console.log("WeatherStore", weatherStore.value);
  }

  return {
    weatherStore,
    getWeather,
    Log,
  };
});
